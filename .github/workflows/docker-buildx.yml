---
name: 'Build Cross-Platform Docker Container Images'

on:
  push:
    tags:
      - v*
  # release:
  #   types:
  #     - released # trigger for stable release event on semver tag

jobs:
  docker-buildx:
    strategy:
      matrix:
        - docker_image:
          - netfoundry/ziti-tunnel
          - openziti/ziti-tunnel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        env:
          DOCKER_IMAGE: ${{ matrix.docker_image }}
        id: prep
        run: |
          # default value if not defined
          : ${DOCKER_IMAGE:=${{ secrets.DOCKER_USERNAME }}/${GITHUB_REPOSITORY#*/}}
          SHORTREF=${GITHUB_SHA::8}

          # If this is git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            ZITI_VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS="${DOCKER_IMAGE}:${ZITI_VERSION},${DOCKER_IMAGE}:${SHORTREF}"

          # If the ZITI_VERSION looks like a version number, assume that
          # this is the most recent version of the image and also
          # tag it 'latest'.
          if [[ $ZITI_VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="${TAGS},${DOCKER_IMAGE}:latest"
          fi

          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=ziti_version::${ZITI_VERSION}

      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all # amd64,arm64,arm    # minimal

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      TODO: uncomment after acceptance in Ziti
            upstream because secrets are never available in forks
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./ziti-tunnel/docker
          build-args: |
            ZITI_VERSION=${{ steps.prep.outputs.ziti_version }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          # push: true     # TODO: uncomment when Docker login is available
          push: false
          tags: ${{ steps.prep.outputs.tags }}
